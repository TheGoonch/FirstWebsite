Html - Builder
CSS - Artist
Js - wizard
All 3 are front end dev

+Html---------------------------------------------------------------------------------------------
Basically use <> as a delimeter to encapsulate elements
<!DOCTYPE html> -- specifies version
<html>
-code here
</html>
  ^--> the / means the end of an element

*Paragraph
<p>some text content</p>

-void elements have no closing tag
-->img, and br

*Attributes
<html lang="en">
        ^--> specifies the languaged used in that element

*Head element, contains important meta info for webpages so no element about displays inside important
ex:
<html lang="en">
  <head>
    <meta charset="UTF-8"> - should always have head enclosing it
    <title>My First Webpage</title> -- gives webpage human readable title
  </head>
</html>

-meta element charset is basically allowing the use of special characters
-if title isn't there it'll defualt to the file name

-body, it's were all the content is contained
<body>
--content here
</body>

^--> all of this is boiler plate so just use ! in the first line for vs code which
     generates all of the code for the basics

+Working with texts---------------------------------------------------------------
-<p> is Paragraph
-<h1> is a header
    - you can do <h1> to h6 and it'll
    create smaller and smaller headers
-<strong> makes characters bold
    ex:
    <body>
        <strong>Lorem ipsum dolor</strong>
    </body>
-<em> makes characters italic, same format as strong
-comments, do <!-- I am an html comment -->

+lists---------------------------------------------------------------------------
*Unordered list
- used for lists of items were being ordered doesn't matter, have a dot instead of num
- Use <ul> for the list, <li> for the items
    ex:
    <ul>
        <li>Item 1</li>
        <li>Item 2</li>
        <li>Item 3</li>
    </ul>

*ordered list
- same thing as list but instead of <ul> it's <ol>, it instead has numbers instead of dots

+Lists and images-----------------------------------------------------------------------------------
- <a> to anchor elements we want to be links
    ex:
    <a href="https://www.theodinproject.com/about">About The Odin Project</a>
    --href is the attribute
    --only opens tab in the same page
- opening a link in another tab
    ex:
    <a href="https://www.theodinproject.com/about" target="_blank" rel="noopener noreferrer">About The Odin Project</a>
    --target is were it will go and set it to blank when you want it to default 
    to a new tab, its value would be _self by default otherwise
    --rel used to describe attribute about current page and linked document
    noopener means current and target can't interact good for security
    --noreferrer prevents new page to know where user came from

-absolute link, refers to the full link / scheme and domain of a destination 
usually contains same scheme, scheme://domain/path

-relative links, links to other pages of our website usually not full link
    ex:
    <a href="about.html">About</a>
    -- make sure they are in the same directory do / to go deeper based on index
    ./ to make sure they start looking in your current directory


*images
-use <img> no closing tag, use attribute src to tell the browser where the image is
- to go to a parent directory use ../
- use alt to describe image, alt="The Odin Project Logo"
- image size attributes are height and width


